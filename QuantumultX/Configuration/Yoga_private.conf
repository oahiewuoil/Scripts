# 本配置基于神机规则增加自定义部分，感谢大佬的辛苦付出；
# 原配置地址：https://github.com/DivineEngine/Profiles/blob/master/Quantumult/Outbound.conf
# 以 ";" 或 "#" 或 "//" 开头的行为注释行，为了方便使用或修改配置时准确定位而写，不影响实际使用；

[general]
# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://www.gstatic.com/generate_204
# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com
# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175
# udp_whitelist 包含目标 UDP 端口，空表示所有的端口都在 udp_whitelist 中。通过Quantumult 隧道接口发送的 UDP 数据包(通过 Quantumult 隧道接口)，目标端口不在 udp_whitelist 中的 UDP 包将被丢弃。这个设置与策略无关，也与代理(服务器)端口无关。
;udp_whitelist=53, 123, 1900, 80-443
;icmp_auto_reply=true

# 资源解析器 
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js
# 节点地区定位
geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IPCheck.js


[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。
# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的DNS服务器，如「server=223.5.5.5.5」)。
;no-system
# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6
# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
# server=223.5.5.5
# 本地 DNS 映射
# Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]
# 如果需要策略图标的话，请在策略后加上：img-url=http://example.com/xxxx.png
# 图标源参考：https://github.com/Koolson/Qure
# 
# 以下为神机规则中对策略分类的解释，方便你理解不同的策略类型；
# 
# 静态策略(static) - 手动选择
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png
# 健康策略(available) - 自动选择
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C
# 负载均衡(round-robin) - 轮询调度
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

# 地区分组，通用配置只设置了一些比较普遍的地区，如有特殊需求自行增减即可；
static=Hongkong, server-tag-regex=(?=.*(港|香港|HK|(?i)Hong)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/HK.png
static=Taiwan, server-tag-regex=(?=.*(台湾|台灣|TW|(?i)Taiwan)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/CN.png
static=Singapore, server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/SG.png
static=American, server-tag-regex=(?=.*(美国|美國|US|(?i)States|American)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/US.png
static=Japan, server-tag-regex=(?=.*(日本|JP|(?i)Japan)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/JP.png
static=Korean, server-tag-regex=(?=.*(韩国|韓國|南朝鲜|KR|(?i)Korean)), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/KR.png
static=Others, server-tag-regex=^((?!(香港|台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|HK|TW|台灣|美國|韓國|獅城|账号|试用|流量|电报|网址|最新|域名|剩余|(?i)IPLC|IEPL|game|States|American|Singapore|Japan|Korea|Hong|Taiwan|data|date|website)).)*$, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Others.png
static=IPLC, server-tag-regex=(手游|游戏|专线|(?i)IPLC|IEPL|game), img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/IPLC.png

# 软件分组策略组
static=Apple, direct, American, Hongkong, proxy, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Apple.png
static=Spotify, proxy, American, Hongkong, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Spotify.png
static=Netflix, proxy, Singapore, Hongkong, Taiwan, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Netflix.png
static=Telegram, proxy, direct, Singapore, IPLC, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Telegram.png
static=Twitter, proxy, American, Hongkong, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Twitter.png
static=Speedtest, direct, proxy, Taiwan, American, Hongkong, Singapore, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Speedtest.png

# 基础策略组，勿删！！！
static=Streaming, proxy, Hongkong, Taiwan, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Streaming.png
static=StreamingSE, direct, proxy, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/StreamingSE.png
static=Guard, reject, direct, proxy, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Guard.png
static=Final, proxy, Hongkong, direct, img-url=https://raw.githubusercontent.com/yogayyy/Scripts/master/Policy/Final.png


[server_remote]
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
# 节点图标参考1：https://github.com/Koolson/Qure
# 节点图标参考2：https://github.com/Orz-3/mini


[filter_remote]
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Unbreak.list, tag=🔂Unbreak, update-interval=86400, enabled=true
# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🛡Advertising, update-interval=86400, force-policy=Guard, enabled=true
# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Privacy.list, tag=🛡️Privacy, update-interval=86400, force-policy=Guard, enabled=false
# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag=🛡️Hijacking, update-interval=86400, force-policy=Guard, enabled=true
# Netflix（台湾片源相对更多）
https://cdn.jsdelivr.net/gh/lhie1/Rules@master/Surge/Surge%203/Provider/Media/Netflix.list, tag=🍿Netflix, force-policy=Netflix, update-interval=86400, opt-parser=true, enabled=true
# Telegram（可选用新加坡/美国等地区节点）
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Telegram/Telegram.list, tag=💬Telegram, force-policy=Telegram, update-interval=86400, opt-parser=false, enabled=true
# Spotify
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Music/Spotify.list, tag=🎶Spotify, force-policy=Spotify, update-interval=86400, opt-parser=false, enabled=true
# Apple
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/AppStoreConnect.list, tag=🍎AppStoreConnect, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Apple/AppStore.list, tag=🍎AppStore, force-policy=Apple, update-interval=86400, opt-parser=false, enabled=true
# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Streaming.list, tag=🎞Streaming, update-interval=86400, enabled=true
# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, update-interval=86400, enabled=true
# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Streaming.list, tag=🎞Streaming, update-interval=86400, enabled=true
# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, update-interval=86400, enabled=true
# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Global.list, tag=🇺🇳Global, update-interval=86400, enabled=true
# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🇨🇳China, update-interval=86400, enabled=true
# 推荐使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确，以及因规则类型优先级(GEOIP > IP-CIDR)导致的问题，使用 ChinaIP.list 时需禁用「GEOIP,CN」规则
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳ChinaIP(与「geoip, cn, direct」二选一), update-interval=86400, enabled=true

[rewrite_remote]
# 不需要的请自行前往圈X重写处禁用/删除；
# iOS原生天气AQI指数标准修正，详细使用方法可前往 https://t.me/AppleNuts/966 查看；
https://raw.githubusercontent.com/chouchoui/QuanX/master/iOS_Weather_AQI_Standard.conf, tag=iOSWeatherAQIStandard_Rewrite, update-interval=86400, opt-parser=false, enabled=true
# Emby解锁，详细使用方法可前往 https://t.me/Plus_Movie_Best/62 查看；
https://subweb.oss-cn-hongkong.aliyuncs.com/Module/embyUnlocked.conf, tag=Emby_Unlock, update-interval=86400, opt-parser=false, enabled=true
# Tiktok外区解锁，只需要开启自己需要解锁的区域即可，目前可选区域包含：台湾/日本/美国/韩国/英国；
https://raw.githubusercontent.com/Tartarus2014/Surge-Script/master/Unlock/TikTokTW.sgmodule, tag=🔓TiktokTW_Unlock, update-interval=86400, opt-parser=true, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Surge-Script/master/Unlock/TikTokUK.sgmodule, tag=🔓TiktokUK_Unlock, update-interval=86400, opt-parser=true, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Surge-Script/master/Unlock/TikTokUS.sgmodule, tag=🔓TiktokUS_Unlock, update-interval=86400, opt-parser=true, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Surge-Script/master/Unlock/TikTokKR.sgmodule, tag=🔓TiktokKR_Unlock, update-interval=86400, opt-parser=true, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Surge-Script/master/Unlock/TikTokJP.sgmodule, tag=🔓TiktokJP_Unlock, update-interval=86400, opt-parser=true, enabled=true
# Sub-Store
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/QX.conf, tag=Sub.Store（sub-store.vercel.app）, update-interval=86400, opt-parser=true, enabled=true
# BoxJs，访问地址为：boxjs.com
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJs（boxjs.com）, update-interval=86400, opt-parser=false, enabled=true
# General
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true
# 微信&抖音去广告
微信&抖音去广告, tag=🛡️WeChat&Douyin_Adblock, update-interval=86400, opt-parser=false, enabled=true
# 知乎手机客户端去广告
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_plus.lnplugin, tag=🛡️Zhihu_Adblock, update-interval=86400, opt-parser=true, enabled=true
# Bilibili手机客户端去广告
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/bilibili/bilibili_plus.sgmodule, tag=🛡️BiliBili_Adblock, update-interval=86400, opt-parser=true, enabled=true
# 什么值得买手机客户端去广告
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/smzdm/smzdm_remove_ads.lnplugin, tag=🛡️SMZDM_Adblock, update-interval=86400, opt-parser=true, enabled=true
# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, enabled=true
# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, enabled=true
# Block YouTube Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡YouTube Premium 禁用, update-interval=86400, enabled=false

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, direct

final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」

[http_backend]
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
# [http_backend] 完整示例请查看「示例」


[mitm]
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
